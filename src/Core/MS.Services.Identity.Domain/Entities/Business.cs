using MS.Services.Core.Data.Data.Attributes;
using MS.Services.Core.Data.Data.Entities;
using MS.Services.Identity.Domain.EntityConstants;
using MS.Services.Identity.Domain.Enums;

namespace MS.Services.Identity.Domain.Entities;

public class Business : BaseSoftDeleteEntity
{
    /// <summary>
    ///     Name of the business.
    /// </summary>
    [QuerySearch]
    public string Name { get; set; } = null!;
    /// <summary>
    ///     Code of the business which is generated by Backend.
    /// </summary>
    [QuerySearch]
    public string Code { get; set; } = null!;
    /// <summary>
    ///     Representative Ozdisan Employee of the business.
    /// </summary>
    public Guid? RepresentativeId { get; set; } //Representative
    public UserEmployee? Representative { get; set; }//Müşteri Temsilcisi

    /// <summary>
    ///     (Optional) ID of the business status associated with this business.
    /// </summary>
    public int? BusinessStatusId { get; set; }
    
    /// <summary>
    ///     Business Status associated with this business.
    /// </summary>
    public BusinessStatus? BusinessStatus { get; set; }
    
    /// <summary>
    ///     Business Status Enum of the business.
    /// </summary>
    public BusinessStatusEnum? BusinessStatusEnum => (BusinessStatusEnum?) BusinessStatusId;
    /// <summary>
    ///     (Optional) Discount Rate to use in orders on ecommerce for this business which is assigned by Ozdisan employees.
    /// </summary>
    public int DiscountRate { get; set; }
    /// <summary>
    ///     (Optional) Business information about how many people works for the business. 
    /// </summary>
    public int? NumberOfEmployeeId { get; set; }
    public NumberOfEmployee? NumberOfEmployee { get; set; }
    /// <summary>
    ///     (Optional) Business sector. 
    /// </summary>
    public int? SectorId { get; set; }
    public Sector? Sector { get; set; }
    /// <summary>
    ///     (Optional) Business activity field. 
    /// </summary>
    public int? ActivityAreaId { get; set; }
    public ActivityArea? ActivityArea { get; set; }
    /// <summary>
    ///     (Optional) Business latest review status. Ozdisan employees review the businesses before they are available to use B2B features
    /// </summary>
    public ReviewStatusEnum? ReviewStatus { get; set; } //TODO convert to enum db style
    /// <summary>
    ///     (Optional) Business latest review date. 
    /// </summary>
    public DateTime? ReviewDate { get; set; }
    /// <summary>
    ///     (Optional) Business latest reviewer (ozdisan user employee). 
    /// </summary>
    public Guid? ReviewBy { get; set; }
    public string? PhoneCountryCode { get; set; }
    public string? Phone { get; set; }
    public string? FaxNumber { get; set; }
    /// <summary>
    ///     (Optional) Keycloak group reference Id. The group used to keep permissions on keycloak related to business.
    /// </summary>
    public Guid? IdentityRefId { get; set; }
    /// <summary>
    ///     (Optional) Business billing address info. This should not be empty for approved businesses.
    /// </summary>
    public BusinessBillingAddress? BillingAddress { get; set; }
    public ICollection<BusinessShippingAddress>? BusinessShippingAddresses { get; set; }
    public ICollection<BusinessNote>? Notes { get; set; }
    public ICollection<UserB2B>? Users { get; set; }
    public ICollection<BusinessUser>? BusinessUsers { get; set; }
    public ICollection<CurrentAccount>? CurrentAccounts { get; set; }
    public BusinessTypeEnum? BusinessType
    {
        get {
            if (this.BillingAddress == null || this.BillingAddress.AddressLocation == null) return null;
            switch (this.BillingAddress.AddressLocation.CountryCode)
            {
                case BusinessConstants.TurkeyCountryCode:
                    return Enums.BusinessTypeEnum.Domestic;
                case null:
                case "":
                    return null;
                default:
                    return Enums.BusinessTypeEnum.International;
            }
        }
    }

}